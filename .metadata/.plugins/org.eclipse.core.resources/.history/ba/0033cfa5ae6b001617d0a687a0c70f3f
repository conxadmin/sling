/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.sling.event.impl.jobs.config;

import java.util.Dictionary;

import org.apache.felix.dm.Component;
import org.apache.felix.dm.DependencyManager;
import org.osgi.framework.Constants;
import org.osgi.service.cm.ConfigurationException;
import org.osgi.service.cm.ManagedServiceFactory;

public class InternalQueueConfigurationFactory
    implements ManagedServiceFactory {
	
	public static final String PID = "org.apache.sling.event.jobs.QueueConfiguration";
	
	private volatile DependencyManager dm;

	@Override
	public String getName() {
		return PID;
	}

	@Override
	public void updated(String pid, Dictionary properties) throws ConfigurationException {
		properties.put(Constants.SERVICE_VENDOR, "The Apache Software Foundation");
		properties.put(Constants.SERVICE_DESCRIPTION, "The configuration of a job processing queue.");
		Component component = dm.createComponent()
				.setInterface(InternalQueueConfiguration.class.getName(), properties)
				.setImplementation(InternalQueueConfiguration.class)
				.setCallbacks(null,"configure","configure", null)//init, start, stop and destroy.
	            ;
		dm.add(component);
	}

	@Override
	public void deleted(String pid) {
		// TODO Auto-generated method stub
	}
}
