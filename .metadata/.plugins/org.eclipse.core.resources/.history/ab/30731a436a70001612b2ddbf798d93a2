package org.apache.sling.dm.jcr.jackrabbit.server.impl;

import org.conxworks.contentrepository.jcr.nodetypes.api.Constants;

import aQute.bnd.annotation.metatype.Meta.AD;
import aQute.bnd.annotation.metatype.Meta.OCD;
import aQute.bnd.annotation.metatype.Meta.Type;



@OCD(description = "ConX Application JCR Install Service")
public interface SlingServerRepositoryManagerConfiguration {
    /** Default regexp for watched folders */
	//"sling.jcrinstall.folder.name.regexp"
	public static final String FOLDER_NAME_REGEXP_PROPERTY = "slingJcrinstallFolderNameRegexp";
    public static final String DEFAULT_FOLDER_NAME_REGEXP = ".*/install|config$";	
    @AD(deflt=DEFAULT_FOLDER_NAME_REGEXP)
    public String slingJcrinstallFolderNameRegexp();
    

    /**
     * Configurable max. path depth for watched folders
     */
    //sling.jcrinstall.folder.max.depth
    public static final String PROP_INSTALL_FOLDER_MAX_DEPTH = "slingJcrinstallFolderMaxDepth";
    public static final String DEFAULT_FOLDER_MAX_DEPTH = "4";
    @AD(type=Type.Integer, deflt=DEFAULT_FOLDER_MAX_DEPTH)
    public int slingJcrinstallFolderMaxDepth();    
    
    /**
     * Configurable search path, with per-path priorities.
     * We could get it from the ResourceResolver, but introducing a dependency on this just to get those
     * values is too much for this module that's meant to bootstrap other services.
     */
    //public static final String PROP_SEARCH_PATH = "sling.jcrinstall.search.path";
    //public static final String DEFAULT_SEARCH_PATH = "/libs:100", "/apps:200";
    public static final String PROP_SEARCH_PATH = "slingJcrinstallSearchPath";
    public static final String[] DEFAULT_SEARCH_PATH = new String[]{"/apps/conx:100"};
    public static final String DEFAULT_SEARCH_PATH_STRING = "/apps/conx:100";
    @AD(type=Type.Integer, cardinality=1000, deflt=DEFAULT_SEARCH_PATH_STRING)
    public String[] slingJcrinstallSearchPath(); 

	//"sling.jcrinstall.new.config.path"
    public static final String PROP_NEW_CONFIG_PATH = "slingJcrinstallNewConfigPath";
    public static final String DEFAULT_NEW_CONFIG_PATH = "sling/install";	
    @AD(deflt=DEFAULT_NEW_CONFIG_PATH)
    public String slingJcrinstallNewConfigPath();  
    
    
	//"sling.jcrinstall.signal.path"
    public static final String PROP_SCAN_PROP_PATH = "slingJcrinstallSignalPath";	
    public static final String PAUSE_SCAN_NODE_PATH = "/system/sling/installer/jcr/pauseInstallation";
    @AD(deflt=PAUSE_SCAN_NODE_PATH)
    public String slingJcrinstallSignalPath(); 
    
	//"sling.jcrinstall.search.type": SEARCH_BY_META_FOLDER or SEARCH_BY_PATHS
    public static final String PROP_SEARCH_TYPE = "slingJcrinstallSignalPath";	
    public static final String SEARCH_TYPE_BY_META_FOLDER = "SEARCH_BY_META_FOLDER";
    public static final String SEARCH_BY_PATHS = "SEARCH_BY_PATHS";
    @AD(deflt=SEARCH_TYPE_BY_META_FOLDER)
    public String slingJcrinstallSearchType();
    
    public static final String PROP_SEARCH_META_FOLDER_TYPES = "slingJcrinstallSearchMetaFolderTypes";
    public static final String[] DEFAULT_SEARCH_META_FOLDER_TYPES = new String[]{Constants.NODETYPE_FOLDER_DATASOURCE,
    		Constants.NODETYPE_FOLDER_UIMETA,
    		Constants.NODETYPE_FOLDER_DATAUPLOAD};
    public static final String DEFAULT_SEARCH_META_FOLDER_TYPES_STRING = Constants.NODETYPE_FOLDER_DATASOURCE+
    		","+Constants.NODETYPE_FOLDER_UIMETA;
    @AD(type=Type.String, cardinality=1000, deflt=DEFAULT_SEARCH_META_FOLDER_TYPES_STRING)
    public String[] slingJcrinstallSearchMetaFolderTypes();    
    

	//"sling.jcrinstall.enable.writeback"
    public static final String PROP_ENABLE_WRITEBACK = "slingJcrinstallEnableWriteback";
    public static final String DEFAULT_ENABLE_WRITEBACK = "false";
    @AD(deflt=DEFAULT_ENABLE_WRITEBACK)
    public Boolean slingJcrinstallEnableWriteback();    
}
