<?xml version="1.0"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<!DOCTYPE Repository
    PUBLIC "-//The Apache Software Foundation//DTD Jackrabbit 2.0//EN"
    "http://jackrabbit.apache.org/dtd/repository-2.0.dtd">

<Repository>
	<!-- virtual file system where the repository stores global state (e.g. 
		registered namespaces, custom node types, etc.). ALERT: If you make changes 
		to the Repository XML ensure that you delete all files is {solution_folder}/system/jackrabbit/repository 
		and drop all the the tables in associated dbs to ensure you start with a 
		pristine repository. If you leave artifacts you may run into errors resulting 
		from an "inconsistent" repository! -->
	<!-- Replace the following "FileSystem" XML node to use supported databases 
		as the repository file system. Change the url, user, password and other parameters 
		to suit your db installation. The schemaObjectPrefix should be a unique prefix 
		that will be prepended to the table names. NOTE: The database must be pre-created 
		in and match the parameters. See Jackrabbit documentation for further explanation. -->
	<FileSystem class="org.conxworks.contentrepository.jcr.jackrabbit.extensions.db.PostgreSQLDbFileSystem">
		<param name="driver" value="javax.naming.InitialContext" />
		<param name="url"
			value="osgi:service/javax.sql.DataSource/(&amp;(org.amdatu.tenant.pid=${TENANT_PID})(name=${DATASOURCE_NAME}))" />
		<param name="schema" value="postgresql" />
		<param name="tableSchema" value="${TENANT_DB_SCHEMA}" />
		<param name="schemaObjectPrefix" value="cr_fs_repos_" />
	</FileSystem>

	<DataStore class="org.conxworks.contentrepository.jcr.jackrabbit.extensions.db.PostgreSQLDbDataStore">
		<param name="driver" value="javax.naming.InitialContext" />
		<param name="url"
			value="osgi:service/javax.sql.DataSource/(&amp;(org.amdatu.tenant.pid=${TENANT_PID})(name=${DATASOURCE_NAME}))" />
		<param name="databaseType" value="postgresql" />
		<param name="tableSchema" value="${TENANT_DB_SCHEMA}" />
		<param name="schemaObjectPrefix" value="cr_ds_" />
	</DataStore>

	<Security appName="Jackrabbit">
		<SecurityManager
			class="org.apache.jackrabbit.core.UserPerWorkspaceSecurityManager">
			<UserManager class="org.apache.jackrabbit.core.security.user.UserPerWorkspaceUserManager">
				<param name="usersPath" value="/home/users" />
				<param name="groupsPath" value="/home/groups" />
				<param name="defaultDepth" value="1" />
				<param name="autoExpandTree" value="true" />
				<AuthorizableAction
					class="org.apache.jackrabbit.core.security.user.action.AccessControlAction">
					<param name="groupPrivilegeNames" value="jcr:read" />
					<param name="userPrivilegeNames" value="jcr:all" />
				</AuthorizableAction>
			</UserManager>

			<!-- workspace access: class: FQN of class implementing the WorkspaceAccessManager 
				interface -->
			<!-- <WorkspaceAccessManager class="..."/> -->
			<!-- <param name="config" value="${rep.home}/security.xml"/> -->
		</SecurityManager>
		<!-- <SecurityManager class="org.apache.jackrabbit.core.DefaultSecurityManager" 
			workspaceName="default"> </SecurityManager> -->

		<AccessManager
			class="org.conxworks.contentrepository.sling.jcr.jackrabbit.server.plugins.security.CustomPluggableDefaultAccessManager">
			<param name="repositoryManagerUrl"
				value="osgi:service/org.conxworks.contentrepository.sling.jcr.jackrabbit.api.ISlingServerRepositoryManagerHelper/(org.amdatu.tenant.pid=${TENANT_PID})" />
		</AccessManager>

		<LoginModule
			class="org.conxworks.contentrepository.sling.jcr.jackrabbit.server.plugins.security.PluggableDefaultLoginModule">
			<param name="anonymousId" value="anonymous" />
			<param name="adminId" value="admin" />
			<param name="repositoryManagerUrl"
				value="osgi:service/org.conxworks.contentrepository.sling.jcr.jackrabbit.api.ISlingServerRepositoryManagerHelper/(org.amdatu.tenant.pid=${TENANT_PID})" />
		</LoginModule>
	</Security>

	<Workspaces rootPath="${rep.home}/workspaces" defaultWorkspace="default" />

	<Workspace name="${wsp.name}">
		<FileSystem class="org.conxworks.contentrepository.jcr.jackrabbit.extensions.db.PostgreSQLDbFileSystem">
			<param name="driver" value="javax.naming.InitialContext" />
			<param name="url"
				value="osgi:service/javax.sql.DataSource/(&amp;(org.amdatu.tenant.pid=${TENANT_PID})(name=${DATASOURCE_NAME}))" />
			<param name="schema" value="postgresql" />
			<param name="tableSchema" value="${TENANT_DB_SCHEMA}" />
			<param name="schemaObjectPrefix" value="cr_fs_ws_" />
		</FileSystem>
		<PersistenceManager
			class="org.conxworks.contentrepository.jcr.jackrabbit.extensions.db.CustomPostgreSQLPersistenceManager">
			<param name="driver" value="javax.naming.InitialContext" />
			<param name="url"
				value="osgi:service/javax.sql.DataSource/(&amp;(org.amdatu.tenant.pid=${TENANT_PID})(name=${DATASOURCE_NAME}))" />
			<param name="databaseType" value="postgresql" />
			<param name="tableSchema" value="${TENANT_DB_SCHEMA}" />
			<param name="schemaObjectPrefix" value="cr_${wsp.name}_pm_ws_" />
		</PersistenceManager>
		<SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
			<param name="path" value="${wsp.home}/index" />
			<param name="supportHighlighting" value="true" />
		</SearchIndex>
	</Workspace>

	<Versioning rootPath="${rep.home}/version">
		<FileSystem class="org.conxworks.contentrepository.jcr.jackrabbit.extensions.db.PostgreSQLDbFileSystem">
			<param name="driver" value="javax.naming.InitialContext" />
			<param name="url"
				value="osgi:service/javax.sql.DataSource/(&amp;(org.amdatu.tenant.pid=${TENANT_PID})(name=${DATASOURCE_NAME}))" />
			<param name="schema" value="postgresql" />
			<param name="tableSchema" value="${TENANT_DB_SCHEMA}" />
			<param name="schemaObjectPrefix" value="cr_fs_ver_" />
		</FileSystem>
		<PersistenceManager
			class="org.conxworks.contentrepository.jcr.jackrabbit.extensions.db.CustomPostgreSQLPersistenceManager">
			<param name="driver" value="javax.naming.InitialContext" />
			<param name="url"
				value="osgi:service/javax.sql.DataSource/(&amp;(org.amdatu.tenant.pid=${TENANT_PID})(name=${DATASOURCE_NAME}))" />
			<param name="databaseType" value="postgresql" />
			<param name="tableSchema" value="${TENANT_DB_SCHEMA}" />
			<param name="schemaObjectPrefix" value="cr_version_" />
		</PersistenceManager>
	</Versioning>

	<SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
		<param name="path" value="${rep.home}/repository/index" />
		<param name="supportHighlighting" value="true" />
	</SearchIndex>

	<!-- Run with a cluster journal -->
	<Cluster id="node1">
		<Journal class="org.apache.jackrabbit.core.journal.MemoryJournal" />
	</Cluster>
</Repository>
