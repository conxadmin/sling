package org.apache.sling.serviceusermapping.impl;


import java.beans.EventHandler;
import java.util.Properties;

import javax.script.ScriptEngineFactory;
import javax.servlet.Servlet;
import javax.servlet.ServletContext;
import javax.servlet.ServletRequestListener;

import org.apache.felix.dm.DependencyActivatorBase;
import org.apache.felix.dm.DependencyManager;
import org.apache.sling.api.auth.Authenticator;
import org.apache.sling.api.resource.ResourceResolverFactory;
import org.apache.sling.auth.core.AuthenticationSupport;
import org.apache.sling.auth.core.impl.engine.EngineSlingAuthenticator;
import org.apache.sling.auth.core.spi.BundleAuthenticationRequirement;
import org.apache.felix.dm.Component;
import org.osgi.framework.BundleContext;
import org.osgi.framework.Constants;
import org.osgi.service.event.EventAdmin;

public class Activator extends DependencyActivatorBase {

	@Override
	public void destroy(BundleContext arg0, DependencyManager arg1) throws Exception {

	}

	@Override
	public void init(BundleContext arg0, DependencyManager dm) throws Exception {
		//MappingConfigAmendment
		Properties properties = new Properties();
		properties.put(Constants.SERVICE_VENDOR, "The Apache Software Foundation");
		Component component = dm.createComponent()
				.setInterface(MappingConfigAmendment.class.getName(), properties)
				.setImplementation(MappingConfigAmendment.class)
				.setCallbacks(null,"configure",null, null)//init, start, stop and destroy.
				.add(createConfigurationDependency().setPid(MappingConfigAmendment.class.getName()))
	            ;
		 dm.add(component);
		 
		//MappingConfigAmendment
		properties = new Properties();
		properties.put(Constants.SERVICE_VENDOR, "The Apache Software Foundation");
		component = dm.createComponent()
				.setInterface(MappingConfigAmendment.class.getName(), properties)
				.setImplementation(MappingConfigAmendment.class)
				.setCallbacks(null,"configure",null, null)//init, start, stop and destroy.
				.add(createConfigurationDependency().setPid(MappingConfigAmendment.class.getName()))
	            ;
		 dm.add(component);
	}

}